name: Build & Test

on: [push, pull_request]

jobs:
  Ubuntu:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      MRUBY_CONFIG: ci/gcc-clang
      TERM: xterm
      CC: gcc
    steps:
      - uses: actions/checkout@v2.4.0
      - name: install packages
        run: sudo apt-get install libgtk-3-dev xvfb
      - name: Ruby version
        run: ruby -v
      - name: Compiler version
        run: ${{ env.CC }} --version
      - name: Build
        run: ./build.sh
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: mrbmacs-gtk
          path: mruby/bin/mrbmacs-gtk
      - name: Test
        run: xvfb-run ./build.sh test

  macOS:
    runs-on: macos-latest
    timeout-minutes: 10
    env:
      MRUBY_CONFIG: ci/gcc-clang
      CC: clang
    steps:
      - uses: actions/checkout@v4
      - name: install gtk
        run: |
          brew update
          brew install gtk+3 gtk-mac-integration
      - name: Ruby version
        run: ruby -v
      - name: Compiler version
        run: ${{ env.CC }} --version
      - name: Build
        run: ./build.sh
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: mrbmacs-gtk
          path: mruby/bin/mrbmacs-gtk
      - name: Setup faketty
        uses: Yuri6037/Action-FakeTTY@v1.1
      - name: Test
        run: faketty ./build.sh test

  Windows-Cygwin:
    runs-on: windows-latest
    timeout-minutes: 15
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      CC: gcc
      installer-path: '%TMP%\cygwin-setup.exe'
      cygwin-root: C:\cygwin
      package-dir: C:\cygwin-package
      cache-version: v1
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/cache@v2.1.7
        with:
          path: ${{ env.package-dir }}
          key: ${{ runner.os }}-cygwin-${{ env.cache-version }}
      - name: Download Cygwin installer
        shell: cmd
        run: >
          bitsadmin /transfer download /priority foreground
          https://cygwin.com/setup-x86_64.exe ${{ env.installer-path }}
      - name: Install Cygwin
        shell: cmd
        run: >
          ${{ env.installer-path }}
          --quiet-mode --no-shortcuts --no-startmenu --no-desktop --no-admin
          --only-site --site http://mirrors.kernel.org/sourceware/cygwin/
          --root ${{ env.cygwin-root }}
          --local-package-dir ${{ env.package-dir }}
          --packages gcc-core,gcc-g++,ruby,libonig-devel,make,git,libiconv-devel,libgtk3-devel
      - name: Set PATH for Cygwin
        run: |
          echo '::set-env name=PATH::${{ env.cygwin-root }}\bin;${{ env.cygwin-root }}\usr\bin'
      - name: Ruby version
        shell: cmd
        run: ruby -v
      - name: Compiler version
        run: ${{ env.CC }} --version
      - name: Build and test
        shell: cmd
        run: bash -o igncr build.sh
      - name: Set PATH for cache archiving (tar)
        # set Windows path so that Cygwin tar is not used for cache archiving
        run: echo '::set-env name=PATH::C:\windows\System32'

  Windows-mingw:
    runs-on: windows-latest
    timeout-minutes: 10
    env:
        MRUBY_CONFIG: ci/gcc-clang
        CC: gcc
    steps:
        - uses: actions/checkout@v3
        - name: Ruby version
          run: ruby -v
        - name: Compiler version
          run: ${{ env.CC }} --version
        - name: Build and test
          run: ./build.sh
